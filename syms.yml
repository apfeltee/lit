  # _Bool lit_dir_open(LitDirReader *rd, const char *path);
  "lit_dir_open": "lit_dir_open"

  # _Bool lit_dir_read(LitDirReader *rd, LitDirItem *itm);
  "lit_dir_read": "lit_dir_read"

  # _Bool lit_dir_close(LitDirReader *rd);
  "lit_dir_close": "lit_dir_close"

  # static void * LIT_INSERT_DATA(LitVM *vm, LitValue instance, size_t typsz, CleanupFunc cleanup);
  "LIT_INSERT_DATA": "LIT_INSERT_DATA"

  # static void * LIT_EXTRACT_DATA(LitVM *vm, LitValue instance);
  "LIT_EXTRACT_DATA": "LIT_EXTRACT_DATA"

  # char * lit_util_readfile(const char *path, size_t *dlen);
  "lit_util_readfile": "lit_util_readfile"

  # _Bool lit_file_exists(const char *path);
  "lit_file_exists": "lit_file_exists"

  # _Bool lit_dir_exists(const char *path);
  "lit_dir_exists": "lit_dir_exists"

  # size_t lit_write_uint8_t(FILE *file, uint8_t byte);
  "lit_write_uint8_t": "lit_write_uint8_t"

  # size_t lit_write_uint16_t(FILE *file, uint16_t byte);
  "lit_write_uint16_t": "lit_write_uint16_t"

  # size_t lit_write_uint32_t(FILE *file, uint32_t byte);
  "lit_write_uint32_t": "lit_write_uint32_t"

  # size_t lit_write_double(FILE *file, double byte);
  "lit_write_double": "lit_write_double"

  # size_t lit_write_string(FILE *file, LitString *string);
  "lit_write_string": "lit_write_string"

  # uint8_t lit_read_uint8_t(FILE *file);
  "lit_read_uint8_t": "lit_read_uint8_t"

  # uint16_t lit_read_uint16_t(FILE *file);
  "lit_read_uint16_t": "lit_read_uint16_t"

  # uint32_t lit_read_uint32_t(FILE *file);
  "lit_read_uint32_t": "lit_read_uint32_t"

  # double lit_read_double(FILE *file);
  "lit_read_double": "lit_read_double"

  # LitString * lit_read_string(LitState *state, FILE *file);
  "lit_read_string": "lit_read_string"

  # void lit_init_emulated_file(LitEmulatedFile *file, const char *source, size_t len);
  "lit_init_emulated_file": "lit_init_emulated_file"

  # uint8_t lit_read_euint8_t(LitEmulatedFile *file);
  "lit_read_euint8_t": "lit_read_euint8_t"

  # uint16_t lit_read_euint16_t(LitEmulatedFile *file);
  "lit_read_euint16_t": "lit_read_euint16_t"

  # uint32_t lit_read_euint32_t(LitEmulatedFile *file);
  "lit_read_euint32_t": "lit_read_euint32_t"

  # double lit_read_edouble(LitEmulatedFile *file);
  "lit_read_edouble": "lit_read_edouble"

  # LitString * lit_read_estring(LitState *state, LitEmulatedFile *file);
  "lit_read_estring": "lit_read_estring"

  # static void save_function(FILE *file, LitFunction *function);
  "save_function": "save_function"

  # static LitFunction * load_function(LitState *state, LitEmulatedFile *file, LitModule *module);
  "load_function": "load_function"

  # static void save_chunk(FILE *file, LitChunk *chunk);
  "save_chunk": "save_chunk"

  # static void load_chunk(LitState *state, LitEmulatedFile *file, LitModule *module, LitChunk *chunk);
  "load_chunk": "load_chunk"

  # void lit_save_module(LitModule *module, FILE *file);
  "lit_save_module": "lit_save_module"

  # LitModule * lit_load_module(LitState *state, const char *input, size_t len);
  "lit_load_module": "lit_load_module"

  # void cleanup_file(LitState *state, LitUserdata *data, _Bool mark);
  "cleanup_file": "cleanup_file"

  # static LitValue objmethod_file_constructor(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_constructor": "objmethod_file_constructor"

  # static LitValue objmethod_file_close(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_close": "objmethod_file_close"

  # static LitValue objmethod_file_exists(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_exists": "objmethod_file_exists"

  # static LitValue objmethod_file_write(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_write": "objmethod_file_write"

  # static LitValue objmethod_file_writebyte(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_writebyte": "objmethod_file_writebyte"

  # static LitValue objmethod_file_writeshort(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_writeshort": "objmethod_file_writeshort"

  # static LitValue objmethod_file_writenumber(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_writenumber": "objmethod_file_writenumber"

  # static LitValue objmethod_file_writebool(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_writebool": "objmethod_file_writebool"

  # static LitValue objmethod_file_writestring(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_writestring": "objmethod_file_writestring"

  # static LitValue objmethod_file_readall(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_readall": "objmethod_file_readall"

  # static LitValue objmethod_file_readline(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_readline": "objmethod_file_readline"

  # static LitValue objmethod_file_readbyte(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_readbyte": "objmethod_file_readbyte"

  # static LitValue objmethod_file_readshort(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_readshort": "objmethod_file_readshort"

  # static LitValue objmethod_file_readnumber(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_readnumber": "objmethod_file_readnumber"

  # static LitValue objmethod_file_readbool(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_readbool": "objmethod_file_readbool"

  # static LitValue objmethod_file_readstring(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_readstring": "objmethod_file_readstring"

  # static LitValue objmethod_file_getlastmodified(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objmethod_file_getlastmodified": "objmethod_file_getlastmodified"

  # static LitValue objfunction_directory_exists(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objfunction_directory_exists": "objfunction_directory_exists"

  # static LitValue objfunction_directory_listfiles(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objfunction_directory_listfiles": "objfunction_directory_listfiles"

  # static LitValue objfunction_directory_listdirs(LitVM *vm, LitValue instance, size_t argc, LitValue *argv);
  "objfunction_directory_listdirs": "objfunction_directory_listdirs"

  # static void free_handle(LitState *state, LitUserdata *userdata, _Bool mark);
  "free_handle": "free_handle"

  # static void make_handle(LitState *state, LitValue fileval, const char *name, FILE *hnd, _Bool canread, _Bool canwrite);
  "make_handle": "make_handle"

  # static void make_stdhandles(LitState *state);
  "make_stdhandles": "make_stdhandles"

  # void lit_open_file_library(LitState *state);
  "lit_open_file_library": "lit_open_file_library"

