  # void optdbg(const char *fmt, ...);
  "optdbg": "lit_astopt_optdbg"

  # void lit_varlist_init(LitVarList *array);
  "lit_varlist_init": "lit_varlist_init"

  # void lit_varlist_destroy(LitState *state, LitVarList *array);
  "lit_varlist_destroy": "lit_varlist_destroy"

  # void lit_varlist_push(LitState *state, LitVarList *array, LitVariable value);
  "lit_varlist_push": "lit_varlist_push"

  # void lit_init_optimizer(LitState *state, LitOptimizer *optimizer);
  "lit_init_optimizer": "lit_astopt_init"

  # static void opt_begin_scope(LitOptimizer *optimizer);
  "opt_begin_scope": "lit_astopt_beginscope"

  # static void opt_end_scope(LitOptimizer *optimizer);
  "opt_end_scope": "lit_astopt_endscope"

  # static LitVariable * add_variable(LitOptimizer *optimizer, const char *name, size_t length, _Bool constant, LitExpression **declaration);
  "add_variable": "lit_astopt_addvar"

  # static LitVariable * resolve_variable(LitOptimizer *optimizer, const char *name, size_t length);
  "resolve_variable": "lit_astopt_resolvevar"

  # static _Bool is_empty(LitExpression *statement);
  "is_empty": "lit_astopt_isemptyexpr"

  # static LitValue evaluate_unary_op(LitOptimizer *optimizer, LitValue value, LitTokType op);
  "evaluate_unary_op": "lit_astopt_evalunaryop"

  # static LitValue evaluate_binary_op(LitOptimizer *optimizer, LitValue a, LitValue b, LitTokType op);
  "evaluate_binary_op": "lit_astopt_evalbinaryop"

  # static LitValue attempt_to_optimize_binary(LitOptimizer *optimizer, LitBinaryExpr *expression, LitValue value, _Bool left);
  "attempt_to_optimize_binary": "lit_astopt_attemptoptbinary"

  # static LitValue evaluate_expression(LitOptimizer *optimizer, LitExpression *expression);
  "evaluate_expression": "lit_astopt_evalexpr"

  # static void optimize_expression(LitOptimizer *optimizer, LitExpression **slot);
  "optimize_expression": "lit_astopt_optexpression"

  # static void optimize_expressions(LitOptimizer *optimizer, LitExprList *expressions);
  "optimize_expressions": "lit_astopt_optexprlist"

  # static void optimize_statement(LitOptimizer *optimizer, LitExpression **slot);
  "optimize_statement": "lit_asdtopt_optstatement"

  # static void optimize_statements(LitOptimizer *optimizer, LitExprList *statements);
  "optimize_statements": "lit_astopt_optstmtlist"

  # void lit_optimize(LitOptimizer *optimizer, LitExprList *statements);
  "lit_optimize": "lit_astopt_optast"

  # static void setup_optimization_states(void);
  "setup_optimization_states": "lit_astopt_setupstates"

  # _Bool lit_is_optimization_enabled(LitOptimization optimization);
  "lit_is_optimization_enabled": "lit_astopt_isoptenabled"

  # void lit_set_optimization_enabled(LitOptimization optimization, _Bool enabled);
  "lit_set_optimization_enabled": "lit_astopt_setoptenabled"

  # void lit_set_all_optimization_enabled(_Bool enabled);
  "lit_set_all_optimization_enabled": "lit_astopt_setalloptenabled"

  # void lit_set_optimization_level(LitOptLevel level);
  "lit_set_optimization_level": "lit_astopt_setoptlevel"

  # const char * lit_get_optimization_name(LitOptimization optimization);
  "lit_get_optimization_name": "lit_astopt_getoptname"

  # const char * lit_get_optimization_description(LitOptimization optimization);
  "lit_get_optimization_description": "lit_astopt_getoptdescr"

  # const char * lit_get_optimization_level_description(LitOptLevel level);
  "lit_get_optimization_level_description": "lit_astopt_getoptleveldescr"

